#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":["C#","c#"],"languageName":"C#","name":"csharp"},{"aliases":[],"languageName":"Mermaid","name":"mermaid"},{"aliases":["frontend"],"name":"vscode"}]}}

#!markdown

# So let's take a look at immutability.

#!csharp

using static System.Console;
using System.Collections.Generic;

#!csharp

var list = new List<string> { "a", "b" };
var dict = new Dictionary<string, int> { {"a", 1}, {"b", 2} };

WriteLine($"list: {String.Join(", ", list)}");
WriteLine($"dict: {String.Join(", ", dict)}");

#!markdown

### But what if we add elements to these collections?

#!csharp

list.Add("c");
dict.Add("c", 3);

WriteLine($"list (after adding elements): {String.Join(", ", list)}");
WriteLine($"dict (after adding elements): {String.Join(", ", dict)}");

#!markdown

## The collections from the Language Ext library are immutable.

#!csharp

#r "nuget: LanguageExt.Core, 4.4.2"

#!csharp

using LanguageExt;
using static LanguageExt.Prelude;
using static LanguageExt.AtomHashMap;

#!csharp

var iSeq = Seq(1, 2, 3, 4);
var iList = List(1, 2, 3, 4);
var iMap = Map( ("a", 1), ("b", 2) );

WriteLine($"iSeq: {iSeq}");
WriteLine($"iList: {iList}");
WriteLine($"iMap: {iMap}");

#!markdown

### Now what if we add elements to these collections?

#!csharp

var uiSeq = iSeq.Add(5);
var uiList = iList.Add(5);
var uiMap = iMap.Add("c", 3);

WriteLine($"After updating, iSeq: {iSeq}, uiSeq: {uiSeq}");
WriteLine($"After updating, iList: {iList}, uiList: {uiList}");
WriteLine($"After updating, iMap: {iMap}, uiMap: {uiMap}");

#!csharp

public record Student(string Name, int Age, Seq<string> addresses);

var addresses = Seq("abc", "def");

var s1 = new Student("Abc", 10, addresses);
var s2 = new Student("Abc", 10, addresses);

WriteLine($"s1: {s1}");
WriteLine($"s1 == s2 (when same data for addresses): {s1 == s2}");

var diffAddresses = Seq("def", "ghi");
var s3 = s2 with { addresses = diffAddresses };

WriteLine($"s3: {s3}");
WriteLine($"s1 == s3 (when different data for addresses): {s1 == s3}");

#!markdown

### So as you see above, these collections -

- are immutable
- have the ToString() implemented correctly
- and give us correct value equality
